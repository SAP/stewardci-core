/*
#########################
#  SAP Steward-CI       #
#########################

THIS CODE IS GENERATED! DO NOT TOUCH!

Copyright SAP SE.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/SAP/stewardci-core/pkg/apis/steward/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// StateItemApplyConfiguration represents an declarative configuration of the StateItem type for use
// with apply.
type StateItemApplyConfiguration struct {
	State      *v1alpha1.State `json:"state,omitempty"`
	StartedAt  *v1.Time        `json:"startedAt,omitempty"`
	FinishedAt *v1.Time        `json:"finishedAt,omitempty"`
}

// StateItemApplyConfiguration constructs an declarative configuration of the StateItem type for use with
// apply.
func StateItem() *StateItemApplyConfiguration {
	return &StateItemApplyConfiguration{}
}

// WithState sets the State field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the State field is set to the value of the last call.
func (b *StateItemApplyConfiguration) WithState(value v1alpha1.State) *StateItemApplyConfiguration {
	b.State = &value
	return b
}

// WithStartedAt sets the StartedAt field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StartedAt field is set to the value of the last call.
func (b *StateItemApplyConfiguration) WithStartedAt(value v1.Time) *StateItemApplyConfiguration {
	b.StartedAt = &value
	return b
}

// WithFinishedAt sets the FinishedAt field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FinishedAt field is set to the value of the last call.
func (b *StateItemApplyConfiguration) WithFinishedAt(value v1.Time) *StateItemApplyConfiguration {
	b.FinishedAt = &value
	return b
}
