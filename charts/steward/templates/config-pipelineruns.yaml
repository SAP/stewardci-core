apiVersion: v1
kind: ConfigMap
metadata:
  name: steward-pipelineruns
  namespace: {{ .Values.targetNamespace.name | quote }}
  labels:
    {{- include "steward.labels" . | nindent 4 }}
    {{- include "steward.runController.componentLabel" . | nindent 4 }}
data:
  _example: |
    ########################
    # Configuration examples
    ########################

    # Copy and paste example settings directly under `.data` of this configmap!

    # timeout is the maximum execution time of pipelines. If a pipeline run
    # exceeds this time, it gets aborted.
    # The value is a duration string that can be parsed by Go's time.parseDuration()
    # (https://godoc.org/time#ParseDuration):
    #   A duration string is a possibly signed sequence of decimal numbers,
    #   each with optional fraction and a unit suffix, such as "300ms", "-1.5h"
    #   or "2h45m". Valid time units are "ns", "us" (or "Âµs"), "ms", "s", "m", "h".
    timeout: 2h15m

    # networkPolicy is the network policy to be created in every pipeline
    # run namespace. The value must be a complete
    # `networkpolicy.networking.k8s.io` resource manifest in YAML format.
    # The `.metadata` section of the manifest can be omitted, as it will
    # be replaced anyway.
    #
    # See https://kubernetes.io/docs/concepts/services-networking/network-policies/
    # for details about Kubernetes network policies.
    #
    # Note that Steward ensures that all pods in pipeline run namespaces are
    # _isolated_ in terms of network policies. The policy defined here adds further
    # egress and/or ingress rules.
    #
    networkPolicy: |
      apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      spec:
        podSelector: {} # any pod in namespace
        policyTypes:
        - Egress
        - Ingress
        egress:
        - # allow unrestricted outbound connections (may be insecure)
          to:
          - ipBlock:
              cidr: 0.0.0.0/0 # any
        ingress:
        - # allow access from all pods in the same namespace
          from:
          - podSelector: {}

    limitRange: |
      apiVersion: v1
      kind: LimitRange
      spec:
        limits:
          - type: "Container"
            default:
              cpu: 3
              memory: 3Gi
            defaultRequest:
              cpu: "0.5"
              memory: "0.5Gi"

    resourceQuota: |
      apiVersion: v1
      kind: ResourceQuota # namespace level total allowed request and limits
      spec:
        hard:
          requests.cpu: 6
          requests.memory: 6Gi
          limits.cpu: 10
          limits.memory: 20Gi

    # jenkinsfileRunner.podSecurityContext.* allow configuring selected fields
    # of the pod security context of the Jenkinsfile Runner pod.
    #
    # See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    # for details about Kubernetes pod security contexts.
    #
    # runAsUser, runAsGroup, fsGroup:
    #   The value must be parseable as an integer in the range [1,65535].
    #   An empty string value is treated as if the field is not present.
    #
    jenkinsfileRunner.podSecurityContext.runAsUser: "1000"
    jenkinsfileRunner.podSecurityContext.runAsGroup: "1000"
    jenkinsfileRunner.podSecurityContext.fsGroup: "1000"

  timeout: {{ .Values.pipelineRuns.timeout | quote }}
  networkPolicy: {{ default ( .Files.Get "data/pipelineruns-default-networkpolicy.yaml" ) .Values.pipelineRuns.networkPolicy | quote }}
  limitRange: {{ default ( .Files.Get "data/pipelineruns-default-limitrange.yaml" ) .Values.pipelineRuns.limitRange | quote }}
  resourceQuota: {{ .Values.pipelineRuns.resourceQuota | quote }}

{{- with .Values.pipelineRuns.jenkinsfileRunner.podSecurityContext }}
{{- if and ( ge ( .runAsUser | int64 ) 1 ) ( le ( .runAsUser | int64 ) 65535 ) }}
  jenkinsfileRunner.podSecurityContext.runAsUser: {{ .runAsUser | int64 | quote }}
{{- else }}
{{ fail "value 'pipelineRuns.jenkinsfileRunner.podSecurityContext.runAsUser' must be an integer in the range of [1,65535]" }}
{{- end -}}
{{- if and ( ge ( .runAsGroup | int64 ) 1 ) ( le ( .runAsGroup | int64 ) 65535 ) }}
  jenkinsfileRunner.podSecurityContext.runAsGroup: {{ .runAsGroup | int64 | quote }}
{{- else }}
{{ fail "value 'pipelineRuns.jenkinsfileRunner.podSecurityContext.runAsGroup' must be an integer in the range of [1,65535]" }}
{{- end -}}
{{- if and ( ge ( .fsGroup | int64 ) 1 ) ( le ( .fsGroup | int64 ) 65535 ) }}
  jenkinsfileRunner.podSecurityContext.fsGroup: {{ .fsGroup | int64 | quote }}
{{- else }}
{{ fail "value 'pipelineRuns.jenkinsfileRunner.podSecurityContext.fsGroup' must be an integer in the range of [1,65535]" }}
{{- end -}}
{{- end -}}
