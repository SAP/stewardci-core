apiVersion: v1
kind: ConfigMap
metadata:
  name: steward-network-policies
  namespace: {{ .Values.targetNamespace.name | quote }}
  labels:
    {{- include "steward.labels" . | nindent 4 }}
    {{- include "steward.runController.componentLabel" . | nindent 4 }}
data:
  _example: |
    ########################
    # Configuration examples
    ########################

    # Copy and paste example settings directly under `.data` of this configmap!

    # _default holds the name of the default networkPolicy which is applied if
    # no networkPolicy is defined in the pipeline run.
    _default: default

    # <name>: <networkPolicy>
    # You can define arbitrary network policies with different keys (except the reserved key '_default' ).
    # The keys are used to select the corresponding network policy from a pipeline run.

    # networkPolicy is the network policy to be created in every pipeline
    # run namespace. The value must be a complete
    # `networkpolicy.networking.k8s.io` resource manifest in YAML format.
    # The `.metadata` section of the manifest can be omitted, as it will
    # be replaced anyway.
    #
    # See https://kubernetes.io/docs/concepts/services-networking/network-policies/
    # for details about Kubernetes network policies.
    #
    # Note that Steward ensures that all pods in pipeline run namespaces are
    # _isolated_ in terms of network policies. The policy defined here adds further
    # egress and/or ingress rules.
    #
    networkPolicy: |
      apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      spec:
        podSelector: {} # any pod in namespace
        policyTypes:
        - Egress
        - Ingress
        egress:
        - # allow unrestricted outbound connections (may be insecure)
          to:
          - ipBlock:
              cidr: 0.0.0.0/0 # any
        ingress:
        - # allow access from all pods in the same namespace
          from:
          - podSelector: {}

    limitRange: |
      apiVersion: v1
      kind: LimitRange
      spec:
        limits:
          - type: "Container"
            default:
              cpu: 3
              memory: 3Gi
            defaultRequest:
              cpu: "0.5"
              memory: "0.5Gi"

    resourceQuota: |
      apiVersion: v1
      kind: ResourceQuota # namespace level total allowed request and limits
      spec:
        hard:
          requests.cpu: 6
          requests.memory: 6Gi
          limits.cpu: 10
          limits.memory: 20Gi

  # _default holds the name of the default networkPolicy which is applied if
  # no networkPolicy is defined in the pipeline run.
  _default: default
  
  default: {{ default ( .Files.Get "data/pipelineruns-default-networkpolicy.yaml" ) .Values.pipelineRuns.networkPolicy | quote }}
 